import { {{~name~}} } from '{{resourceFile}}';
import {HttpClient} from '@angular/common/http';
import {ApiPlatformPagedCollection, ApiPlatformIdentifier, HttpClientGetOptions} from '../utils/utils';
import {Inject, Injectable} from '@angular/core';

@Injectable()
export class {{name}}Service {

  readonly RESOURCE_NAME = '{{pluralize (toLowerCase (camelCaseToSnakeCase name))}}';

  constructor(
    protected http: HttpClient,
    @Inject('BASE_API_URL') protected baseUrl: string
  ) {
  }

  getCollection(options?: HttpClientGetOptions) {
    return this.http.get<ApiPlatformPagedCollection<{{name}}>>(`${this.baseUrl}/api/${this.RESOURCE_NAME}`,options);
  }

  addItem(item: {{name}}) {
    return this.http.post<{{name}}>(`${this.baseUrl}/api/${this.RESOURCE_NAME}`, item);
  }

  getItem(id: ApiPlatformIdentifier, options?: HttpClientGetOptions) {
    return this.http.get<{{name}}>(`${this.baseUrl}${this.buildIri(id)}`, options);
  }

  updateItem(item: {{name}}) {
    return this.http.put<{{name}}>(`${this.baseUrl}${this.buildIri(item)}`, item);
  }

  deleteItem(id: ApiPlatformIdentifier) {
    return this.http.delete<{}>(`${this.baseUrl}${this.buildIri(id)}`);
  }

  buildIri(id?: ApiPlatformIdentifier): string {
    if (id && id.id) {
      return `/api/${this.RESOURCE_NAME}/${id.id}`;
    } else if (id && id['@id']) {
      return `${id['@id']}`;
    } else {
      return `/api/${this.RESOURCE_NAME}`;
    }
  }

}

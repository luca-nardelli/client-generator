import { {{~title~}} } from '{{resourceFile}}';
import {HttpClient} from '@angular/common/http';
import {ApiPlatformPagedCollection, ApiPlatformIdentifier, HttpClientGetOptions} from '../utils/utils';
import {Inject, Injectable} from '@angular/core';

@Injectable()
export class {{title}}Service {

  readonly RESOURCE_NAME = '{{name}}';

  constructor(
    protected http: HttpClient,
    @Inject('BASE_API_URL') protected baseUrl: string
  ) {
  }

  getCollection<T = {{title}}>(options?: HttpClientGetOptions) {
    return this.http.get<ApiPlatformPagedCollection<T>>(`${this.baseUrl}/api/${this.RESOURCE_NAME}`, options);
  }

  addItem<T = {{title}}>(item: T) {
    return this.http.post<T>(`${this.baseUrl}/api/${this.RESOURCE_NAME}`, item);
  }

  getItem<T = {{title}}>(id: ApiPlatformIdentifier, options?: HttpClientGetOptions) {
    return this.http.get<T>(`${this.baseUrl}${this.buildIri(id)}`, options);
  }

  updateItem<T = {{title}}>(item: T) {
    return this.http.put<T>(`${this.baseUrl}${this.buildIri(item)}`, item);
  }

  deleteItem(id: ApiPlatformIdentifier) {
    return this.http.delete<{}>(`${this.baseUrl}${this.buildIri(id)}`);
  }

  buildIri(id?: ApiPlatformIdentifier): string {
    if (id && id.id) {
      return `/api/${this.RESOURCE_NAME}/${id.id}`;
    } else if (id && id['@id']) {
      return `${id['@id']}`;
    } else {
      return `/api/${this.RESOURCE_NAME}`;
    }
  }

}

import { {{~name~}} } from '{{resourceFile}}';
import {AxiosInstance, AxiosRequestConfig} from "axios";
import {ApiPlatformPagedCollection, ApiPlatformIdentifier} from '../utils/utils';

export class {{name}}Service {

  static readonly RESOURCE_NAME = '{{pluralize (toLowerCase (camelCaseToSnakeCase name))}}';

  constructor(
    protected http: AxiosInstance
  ) {
  }

  getCollection<T = {{name}}>(config?: AxiosRequestConfig) {
    return this.http.get<ApiPlatformPagedCollection<T>>(`/api/${ {{~name~}}Service.RESOURCE_NAME}`,config);
  }

  addItem<T = {{name}}>(item: {{name}}) {
    return this.http.post<T>(`/api/${ {{~name~}}Service.RESOURCE_NAME}`, item);
  }

  getItem<T = {{name}}>(id: ApiPlatformIdentifier,config?: AxiosRequestConfig) {
    return this.http.get<T>(`${ {{~name~}}Service.buildIri(id)}`,config);
  }

  updateItem<T = {{name}}>(item: {{name}}) {
    return this.http.put<T>(`${ {{~name~}}Service.buildIri(item)}`, item);
  }

  deleteItem(id: ApiPlatformIdentifier) {
    return this.http.delete(`${ {{~name~}}Service.buildIri(id)}`);
  }

  static buildIri(id?: ApiPlatformIdentifier): string {
    if (id && id.id) {
      return `/api/${ {{~name~}}Service.RESOURCE_NAME}/${id.id}`;
    } else if (id && id['@id']) {
      return `${id['@id']}`;
    } else {
      return `/api/${ {{~name~}}Service.RESOURCE_NAME}`;
    }
  }

}
